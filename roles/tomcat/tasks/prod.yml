---
# author: wei.gao

- name: debug |  print params
  debug: msg="app = {{ app }}, lang = {{ lang }}, artifact = {{ artifact }}, env = {{ env }}"

- name: backup | create dir {{ tomcat_path }}backup
  file: path={{ tomcat_path }}{{ item }} state=directory
  with_items:
    - backup
    - release

- name: backup | cp war
  shell: cp -r {{ tomcat_path }}webapps/{{ app }}.war  {{ tomcat_path }}backup/{{ app }}-`date '+%F'`.war
  ignore_errors: true

# 当是PROD环境时候，先把发行包放到jump服务器上
- block:
    - name: jump | create dir
      file: path=/tmp/release/{{ app }} state=directory
      delegate_to: "{{ groups['upload'][0] }}"

    - name: jump |  delegate_to delegate_to delegate_to
      copy: src={{ artifact }} dest=/tmp/release/{{ app }}
      delegate_to: "{{ groups['upload'][0] }}"

    - name: sync files
      shell: rsync -av root@{{ groups['upload'][0] }}:/tmp/release/{{ app }}/ {{ tomcat_path }}release/
  when: env == "dev"

- name: upload | upload {{ artifact }}
  copy: src={{ artifact }} dest={{ tomcat_path }}release/
  when: env != "dev"

- name: stop |  stop tomcat
  shell: "{{ tomcat_path }}bin/catalina.sh stop -force"

- name: stop |  wait {{ tomcat_port }} stop
  wait_for: port={{ tomcat_port }} state=stopped timeout=5
  register: rs
  ignore_errors: true

- block:
    - name: debug | print rs
      debug: msg="{{ rs }}"

    - name: check | find pid
      shell: ps -ef | grep tomcat | grep {{ tomcat_path }} | grep -v grep | awk '{print $2}'
      register: var_pid

    - name: debug | print pid
      debug: msg="{{ var_pid }}"

    - name: stop |  kill -9 pid
      shell: kill -9 {{ var_pid.stdout }}
      when: var_pid.stdout != ''

    - name: stop |  next wait {{ tomcat_port }} stop
      wait_for: port={{ tomcat_port }} state=stopped timeout=3
  when: rs.failed == true

- name: stop |  rm old files
  shell: "rm -rf {{ tomcat_path }}{{ item }}/*"
  with_items:
    - webapps
    - work
    - logs
    - temp

- name: deploy | mv release to webapps
  shell: "mv {{ tomcat_path }}release/* {{ tomcat_path }}webapps/"

- name: deploy | start tomcat
  shell: chdir={{ tomcat_path }}bin nohup ./catalina.sh start &
  ignore_errors: true
